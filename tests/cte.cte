c0
// Basic CTE test cases
{
    "options" = {
        "failFast" = false  // If true, halt tests on first error
    }

    "ceTests" = [

        // ====================================================================

        {
            "name" = "something"
            "cte" = "\.%%%%
c0 |u8x /* foo */ 1 2 3|
            %%%%"
            "events" = ["v 0" "au8b" "com t  foo " "ac 3 f" "ad 1 2 3"]
            "from"   = ["t"]
            "to"     = ["e"]
        }

        // ====================================================================

    ]

    // ========================================================================
    // ========================================================================

    "cteTests" = [
        {
            "name" = "Version specifier"
            "decodeMustSucceed" = [
                {"source"="c0 1"           "events"=["v 0" "n 1"]}
                {"source"="c0\n1"          "events"=["v 0" "n 1"]}
                {"source"="c0\t1"          "events"=["v 0" "n 1"]}
                {"source"="c0\r\n1"        "events"=["v 0" "n 1"]}
                {"source"="\r\n\t  c0 1"   "events"=["v 0" "n 1"]}
                {"source"="c0 \r\n\t   1"  "events"=["v 0" "n 1"]}
            ]
            "decodeMustFail" = [
                "c0{}"  // Missing whitespace
                "c2 1"  // Future version number
                "c-1 1" // Bad version number
                "ca 1"  // Bad version number
                "d0 1"  // Bad first char
            ]
        }

        // ====================================================================

        {
            "name" = "Null"
            "decodeMustSucceed" = [
                {"source"="c0 null"  "events"=["v 0" "null"]}
                {"source"="c0 Null"  "events"=["v 0" "null"]}
                {"source"="c0 null"  "events"=["v 0" "null"]}
            ]
            "decodeMustFail" = [
                "c0 nulled"
                "c0 -null"
            ]
        }

        // ====================================================================

        {
            "name" = "Boolean"
            "decodeMustSucceed" = [
                {"source"="c0 true"   "events"=["v 0" "tt"]}
                {"source"="c0 True"   "events"=["v 0" "tt"]}
                {"source"="c0 TRUE"   "events"=["v 0" "tt"]}
                {"source"="c0 false"  "events"=["v 0" "ff"]}
                {"source"="c0 False"  "events"=["v 0" "ff"]}
                {"source"="c0 FALSE"  "events"=["v 0" "ff"]}
            ]
            "decodeMustFail" = [
                "c0 t"
                "c0 truer"
                "c0 -true"
                "c0 f"
                "c0 falser"
                "c0 -false"
            ]
        }

        // ====================================================================

        {
            "name" = "Decimal Integer"
            "decodeMustSucceed" = [
                {"source"="c0 0"                 "events"=["v 0" "n 0"]}
                {"source"="c0 -0"                "events"=["v 0" "n -0"]}
                {"source"="c0 123"               "events"=["v 0" "n 123"]}
                {"source"="c0 9412504234235366"  "events"=["v 0" "n 9412504234235366"]}
                {"source"="c0 -49523"            "events"=["v 0" "n -49523"]}
                {"source"="c0 10000000000000000000000000000"        "events"=["v 0" "n 10000000000000000000000000000"]}
                {"source"="c0 -10000000000000000000000000000"       "events"=["v 0" "n -10000000000000000000000000000"]}
                {"source"="c0 100_00_0_00000000000_00000000_000_0"  "events"=["v 0" "n 10000000000000000000000000000"]}
                {"source"="c0 -4_9_5__2___3"     "events"=["v 0" "n -49523"]}
            ]
            "decodeMustFail" = [
                "c0 1f"  // Non-decimal digit
                "c0 -1f" // Non-decimal digit
                "c0 _1"  // Whitespace is not between digits
                "c0 1_"  // Whitespace is not between digits
                "c0 -_1" // Whitespace is not between digits
                "c0 -1_" // Whitespace is not between digits
            ]
        }

        // ====================================================================

        {
            "name" = "Binary Integer"
            "decodeMustSucceed" = [
                {"source"="c0 0b0"              "events"=["v 0" "n 0"]}
                {"source"="c0 -0b0"             "events"=["v 0" "n -0"]}
                {"source"="c0 0b1"              "events"=["v 0" "n 1"]}
                {"source"="c0 -0b101"           "events"=["v 0" "n -5"]}
                {"source"="c0 0b0010100"        "events"=["v 0" "n 20"]}
                {"source"="c0 -0b1_0_0"         "events"=["v 0" "n -4"]}
                {"source"="c0 0b0_0_1__010__1"  "events"=["v 0" "n 21"]}
                {
                    "source" = "c0 0b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                    "events" = ["v 0" "n 0b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"]
                }
                {
                    "source" = "c0 -0b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
                    "events" = ["v 0" "n -0b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"]
                }
                {
                    "source" = "c0 0b100000000000000_000000000000_000000000000000000000000_000000000000000000000_0000000000000000000000000000000000000000_0"
                    "events" = ["v 0" "n 0b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"]
                }
                {
                    "source" = "c0 -0b100000000000000_000000000000_000000000000000000000000_000000000000000000000_0000000000000000000000000000000000000000_0"
                    "events" = ["v 0" "n -0b10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"]
                }
            ]
            "decodeMustFail" = [
                "c0 0b12"  // Non-binary digit
                "c0 -0b12" // Non-binary digit
                "c0 _0b1"  // Bad whitespace placement
                "c0 -_0b1" // Bad whitespace placement
                "c0 0_b1"  // Bad whitespace placement
                "c0 -0_b1" // Bad whitespace placement
                "c0 0b_1"  // Whitespace is not between digits
                "c0 0b1_"  // Whitespace is not between digits
                "c0 -0b_1" // Whitespace is not between digits
                "c0 -0b1_" // Whitespace is not between digits
            ]
        }

        // ====================================================================

        {
            "name" = "Octal Integer"
            "decodeMustSucceed" = [
                {"source"="c0 0o0"         "events"=["v 0" "n 0"]}
                {"source"="c0 -0o0"        "events"=["v 0" "n -0"]}
                {"source"="c0 0o1"         "events"=["v 0" "n 1"]}
                {"source"="c0 0o7"         "events"=["v 0" "n 7"]}
                {"source"="c0 -0o51"       "events"=["v 0" "n -0o51"]}
                {"source"="c0 0o644"       "events"=["v 0" "n 0o644"]}
                {"source"="c0 -0o777"      "events"=["v 0" "n -0o777"]}
                {"source"="c0 0o1000000000000000000000000000000000000000000000"  "events"=["v 0" "n 0o1000000000000000000000000000000000000000000000"]}
                {"source"="c0 -0o1000000000000000000000000000000000000000000000"  "events"=["v 0" "n -0o1000000000000000000000000000000000000000000000"]}
                {"source"="c0 0o1000000_0000000000_00000000000_000000000000_000000"  "events"=["v 0" "n 0o1000000000000000000000000000000000000000000000"]}
                {"source"="c0 0o7__7___7"  "events"=["v 0" "n 0o777"]}
            ]
            "decodeMustFail" = [
                "c0 0o19"  // Non-octal digit
                "c0 -0o19" // Non-octal digit
                "c0 _0o1"  // Bad whitespace placement
                "c0 -_0o1" // Bad whitespace placement
                "c0 0_o1"  // Bad whitespace placement
                "c0 -0_o1" // Bad whitespace placement
                "c0 0o_1"  // Whitespace is not between digits
                "c0 0o1_"  // Whitespace is not between digits
                "c0 -0o_1" // Whitespace is not between digits
                "c0 -0o1_" // Whitespace is not between digits
            ]
        }

        // ====================================================================

        {
            "name" = "Hexadecimal Integer"
            "decodeMustSucceed" = [
                {"source"="c0 0x0"                  "events"=["v 0" "n 0"]}
                {"source"="c0 -0x0"                 "events"=["v 0" "n -0"]}
                {"source"="c0 0x1"                  "events"=["v 0" "n 1"]}
                {"source"="c0 0xf"                  "events"=["v 0" "n 15"]}
                {"source"="c0 -0xd4"                "events"=["v 0" "n -0xd4"]}
                {"source"="c0 0xfedcba9876543210"   "events"=["v 0" "n 0xfedcba9876543210"]}
                {"source"="c0 -0xFEDCBA9876543210"  "events"=["v 0" "n -0xfedcba9876543210"]}
                {"source"="c0 0x1000000000000000000000000000000000000000000000"  "events"=["v 0" "n 0x1000000000000000000000000000000000000000000000"]}
                {"source"="c0 -0x1000000000000000000000000000000000000000000000"  "events"=["v 0" "n -0x1000000000000000000000000000000000000000000000"]}
                {"source"="c0 0x100000000_000000_00000_000__000_0000000000000_0000000"  "events"=["v 0" "n 0x1000000000000000000000000000000000000000000000"]}
                {"source"="c0 0x8_8__5_a_f__d"  "events"=["v 0" "n 0x885afd"]}
            ]
            "decodeMustFail" = [
                "c0 0x1g"  // Non-hex digit
                "c0 -0x1g" // Non-hex digit
                "c0 _0x1"  // Bad whitespace placement
                "c0 -_0x1" // Bad whitespace placement
                "c0 0_x1"  // Bad whitespace placement
                "c0 -0_x1" // Bad whitespace placement
                "c0 0x_1"  // Whitespace is not between digits
                "c0 0x1_"  // Whitespace is not between digits
                "c0 -0x_1" // Whitespace is not between digits
                "c0 -0x1_" // Whitespace is not between digits
            ]
        }

        // ====================================================================

    ]
}
